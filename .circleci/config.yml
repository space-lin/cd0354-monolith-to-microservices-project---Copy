version: 2.1

executors:
  docker-executor:
    docker:
      - image: cimg/docker:20.10 # Base image used for the build process
    working_directory: ~/repo

orbs:
  node: circleci/node@5  # Node orb to help with node.js jobs

jobs:
  build:
    executor: docker-executor
    steps:
      # Checkout the code from your repository
      - checkout

      # Set up DockerHub authentication to allow pushing images
      - run:
          name: Log into DockerHub
          command: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      # Install dependencies (for Node.js project)
      - run:
          name: Install dependencies
          command: npm install

      # Build Docker images for each service (assuming services like udagram-api-feed, udagram-frontend, etc.)
      - run:
          name: Build Docker images
          command: |
            docker build -t udagram-api-feed ./udagram-api-feed
            docker build -t udagram-api-user ./udagram-api-user
            docker build -t udagram-frontend ./udagram-frontend
            docker build -t reverseproxy ./reverseproxy

      # Tag Docker images with version and your DockerHub username
      - run:
          name: Tag Docker images
          command: |
            docker tag udagram-api-feed "$DOCKER_USERNAME/udagram-api-feed:v1"
            docker tag udagram-api-user "$DOCKER_USERNAME/udagram-api-user:v1"
            docker tag udagram-frontend "$DOCKER_USERNAME/udagram-frontend:v1"
            docker tag reverseproxy "$DOCKER_USERNAME/reverseproxy:v1"

      # Push Docker images to DockerHub
      - run:
          name: Push Docker images
          command: |
            docker push "$DOCKER_USERNAME/udagram-api-feed:v1"
            docker push "$DOCKER_USERNAME/udagram-api-user:v1"
            docker push "$DOCKER_USERNAME/udagram-frontend:v1"
            docker push "$DOCKER_USERNAME/reverseproxy:v1"

  # Example of a deploy job, you can add steps to deploy your app
  deploy:
    docker:
      - image: cimg/docker:20.10 # Same image for deploy process
    steps:
      # Deployment script or any other deploy tasks
      - run:
          name: Deploy to Kubernetes or Cloud
          command: "./deploy.sh"

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
